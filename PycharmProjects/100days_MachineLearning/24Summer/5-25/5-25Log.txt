5-25Log
    邻接表：
        一、定义：
            邻接表是一种表示图的数据结构
            对于图中每个顶点，维护一个由其相邻顶点组成的列表，这个列表可以是 数组，链表 或者其他数据结构
        二：表示：
            1.可以用顺序表进行储存
            2.可以用单链表进行储存
        三、分类：
            邻接表可以用于有向图，无向图，带权图和无权图
        四、应用：
            邻接表一般在图的遍历算法中较为常见
        五、优缺点：
            优点： 1.空间利用率高
                    因为邻接表仅需要储存存在的边，而邻接矩阵需要储存所有的边
                  2.遍历速度
                    遍历速度更快
            缺点：
                  1.不适合储存稠密图
                  2.代码更加复杂
    哈希表：
        查找算法的概述：
            线性枚举：在一个顺序表或者一个链表中查找一个元素是否存在时，遍历整个线性表  O(N)
            二分枚举：如果顺序表是有序的情况下，可以使用二分查找  O（logN）

        一、定义：
            把查找的数据通过一个函数映射,找到数据储存的位置，这个过程称为哈希，
                需要查找的数据称为关键字，通过映射函数将关键字变成哈希的过程，称为哈希函数
        二、表示：
            哈希表底层是一个顺序表，每个位置称为一个槽，储存一个键值对
                    键值对：由键和值构成，两者可以是任意类型。
    哈希函数：
        一、定义：
            通过映射函数将关键字变成哈希的过程，称为哈希函数
        二、表示：
            y = F（x）
        三、哈希函数的特征：
            1、单射
            2、雪崩效应 ： 雪崩效应是为了让哈希值，更加符合随机分布的原则，哈希表中键的分布越随机，利用率越高，效率越高
    哈希冲突：
        一、定义：
            哈希函数在生成哈希值的过程中，如果产生了不同的关键字得到相同的哈希值，被称为哈希冲突
    常用的哈希函数：
        1.直接定址法：
            键本身就是哈希值， F（x） = x，由于哈希值需要映射到顺序表中作为索引，所以直接定址法用于处理数据量较小的且为非负整数的键
        2.平方取中法：
            对键进行平方，取其中的几位作为哈希值。适用于不清楚键的分布，且位数不是很大的情况
        3.折叠法：
            将关键字分为位数相同的几部分，然后在进行求和
        4.除留余数法：
            F（x）= X mod m，其中m表示哈希表的长度
        5.位与法：
            哈希长度一般为2的幂
            由于取模运算比较耗时，位运算比较高效，选择2的幂可以将取模运算转换成二进位与
                令m位2的k次，m=（10000000）2  （k个0）
                  任何一个数模m
                m-1 = （1111111）2  （k个1）
    哈希冲突的解决方法：
        开放地址法 和 链地址法
        1.开放地址法：
            一旦发生冲突，需要下一个空的地址，只要哈希表足够大就可以容纳。
                注意：当插入数据超过哈希表长度时，不再执行插入
        2.链地址法：
            发生冲突时，选择不换位置，在原来的位置把哈希值相同的用链表串联起来




